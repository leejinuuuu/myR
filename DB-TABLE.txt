drop database test_db;

create database test_db;

use test_db;

create table ingredient (
	ingredient_uuid varchar(100) not null primary key,
	ingredient_name varchar(100) not null,
	ingredient_image varchar(50) null
);

create table cocktail (
	cocktail_uuid varchar(100) not null primary key,
	cocktail_name varchar(100) not null,
	cocktail_writer varchar(1000) null,
	cocktail_image varchar(50) null,
	cocktail_explanation varchar(1000) null,
	cocktail_glass varchar(1000) null,
	cocktail_base varchar(50) null,
	cocktail_source varchar(1000) null
);

create table user(
	user_id varchar(100) not null primary key,
	user_password varchar(100) not null,
	user_nickname varchar(100) not null,
	user_email varchar(100) not null
);

/*
combinations
*/

create table settingCocktailWithIngredient(
	settingCocktailWithIngredient_uuid varchar(100) not null primary key,
	cocktail_uuid varchar(100) not null,
	cocktail_name varchar(100) not null,
	ingredient_uuid varchar(100) not null,
	ingredient_name varchar(50) not null,
	vol varchar(10) not null,
	tool varchar(10) not null,

	index set_igd_index(cocktail_name),
	foreign key(cocktail_uuid) references cocktail(cocktail_uuid) on delete cascade,
	foreign key(ingredient_uuid) references ingredient(ingredient_uuid) on delete cascade	
);

create table commentCocktailWithUser(
	commentCocktailWithUser_uuid varchar(100) not null primary key,
	cocktail_uuid varchar(100) not null,
	cocktail_name varchar(100) not null,
	user_id varchar(100) not null,
	comment varchar(1000) null,
	time varchar(50) not null,

	index set_igd_index(cocktail_name),
	foreign key(cocktail_uuid) references cocktail(cocktail_uuid) on delete cascade,
	foreign key(user_id) references user(user_id) on delete cascade
);

create table downloadUserWithCocktail(
	downloadUserWithCocktail_uuid varchar(100) not null primary key,
	cocktail_uuid varchar(100) not null,
	cocktail_name varchar(100) not null,
	user_id varchar(100) not null,

	index set_igd_index(user_id),
	foreign key(cocktail_uuid) references cocktail(cocktail_uuid) on delete cascade,
	foreign key(user_id) references user(user_id) on delete cascade
);
