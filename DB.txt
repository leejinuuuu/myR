drop database test_db;

create database test_db;

use test_db;

create table ingredient (
	ingredient_name varchar(100) not null primary key,
	ingredient_image varchar(50) null
);

create table cocktail (
	cocktail_name varchar(100) not null primary key,
	cocktail_writer varchar(1000) null,
	cocktail_image varchar(50) null,
	cocktail_explanation varchar(1000) null,
	cocktail_glass varchar(1000) null,
	cocktail_base varchar(50) null,
	cocktail_source varchar(1000) null
);

create table user(
	user_id varchar(100) not null primary key,
	user_password varchar(100) not null,
	user_nickname varchar(100) not null,
	user_email varchar(100) not null
);

create table settingCocktailWithIngredient(
	num int auto_increment not null primary key,
	cocktail_name varchar(100) not null,
	ingredient_name varchar(50) not null,
	vol varchar(10) not null,
	tool varchar(10) not null,

	index set_igd_index(cocktail_name),
	foreign key(cocktail_name) references cocktail(cocktail_name) on delete cascade,
	foreign key(ingredient_name) references ingredient(ingredient_name) on delete cascade	
);

create table commentCocktailWithUser(
	num int auto_increment not null primary key,
	cocktail_name varchar(100) not null,
	user_id varchar(100) not null,
	comment varchar(1000) null,
	time varchar(50) not null,

	index set_igd_index(cocktail_name),
	foreign key(cocktail_name) references cocktail(cocktail_name) on delete cascade,
	foreign key(user_id) references user(user_id) on delete cascade
);

create table downloadUserWithCocktail(
	num int auto_increment not null primary key,
	cocktail_name varchar(100) not null,
	user_id varchar(100) not null,

	index set_igd_index(user_id),
	foreign key(cocktail_name) references cocktail(cocktail_name) on delete cascade,
	foreign key(user_id) references user(user_id) on delete cascade
);

alter database test_db default character set utf8;
alter table ingredient convert to character set utf8;
alter table cocktail convert to character set utf8;
alter table settingCocktailWithIngredient convert to character set utf8;
alter table user convert to character set utf8;
alter table downloadUserWithCocktail convert to character set utf8;

/*
재료 추가 쿼리문
*/
insert into ingredient(ingredient_name, ingredient_image)
	select '1_name','1_image'
	from dual where not exists(
		select * from ingredient where ingredient_name='1_name');
insert into ingredient(ingredient_name, ingredient_image)
	select '2_name','2_image'
	from dual where not exists(
		select * from ingredient where ingredient_name='2_name');
insert into ingredient(ingredient_name, ingredient_image)
	select '3_name','3_image'
	from dual where not exists(
		select * from ingredient where ingredient_name='3_name');

/*
칵테일 추가 쿼리문
*/
insert into cocktail(cocktail_name, cocktail_writer, cocktail_image, cocktail_explanation, cocktail_glass, cocktail_base, cocktail_source)
	select 'a_name', 'a_writer', 'a_image', 'a_explanation', 'a_glass', 'a_base', null
	from dual where not exists(
		select * from cocktail where cocktail_name='a_name');
insert into cocktail(cocktail_name, cocktail_writer, cocktail_image, cocktail_explanation, cocktail_glass, cocktail_base, cocktail_source)
	select 'b_name', 'b_writer', 'b_image', 'b_explanation', 'b_glass', 'b_base', null
	from dual where not exists(
		select * from cocktail where cocktail_name='b_name');

/*
조합-칵테일-재료 추가 쿼리문
*/
insert into settingCocktailWithIngredient(num, cocktail_name, ingredient_name, vol, tool)
	select null,'a_name','1_name', '1', 'oz'
	from dual where not exists(
		select * from settingCocktailWithIngredient where cocktail_name='a_name' and ingredient_name='1_name');
insert into settingCocktailWithIngredient(num, cocktail_name, ingredient_name, vol, tool)
	select null,'a_name','2_name', '2', 'ml'
	from dual where not exists(
		select * from settingCocktailWithIngredient where cocktail_name='a_name' and ingredient_name='2_name');
insert into settingCocktailWithIngredient(num, cocktail_name, ingredient_name, vol, tool)
	select null,'b_name','1_name', '6.5', 'oz'
	from dual where not exists(
		select * from settingCocktailWithIngredient where cocktail_name='b_name' and ingredient_name='1_name');

select * from ingredient;
select * from cocktail;
select * from settingCocktailWithIngredient;
select * from downloadUserWithCocktail;

select * from settingCocktailWithIngredient where settingCocktailWithIngredient.cocktail_name = 'a_name';

/*
사용자 추가 쿼리문
*/
insert into user(user_id, user_password, user_nickname, user_email)
	select 'user0_id', 'user0_password', 'user0_nickname', 'user0_email'
	from dual where not exists(
		select * from user where user_id='user0_id');
insert into user(user_id, user_password, user_nickname, user_email)
	select 'user1_id', 'user1_password', 'user1_nickname', 'user1_email'
	from dual where not exists(
		select * from user where user_id='user1_id');
insert into user(user_id, user_password, user_nickname, user_email)
	select 'user2_id', 'user2_password', 'user2_nickname', 'user2_email'
	from dual where not exists(
		select * from user where user_id='user2_id');

insert into user(user_id, user_password, user_nickname, user_email) 
	select 'user4_id', 'user4_password', 'user4_nickname', 'user4_email'
	from dual where not exists(
		select * from user where user_id='user4_id');
	
/*
다운로드-칵테일-사용자 추가 쿼리문
*/
insert into downloadUserWithCocktail(num, cocktail_name, user_id)
	select null,'a_name','user0_id'
	from dual where not exists(
		select * from downloadUserWithCocktail where cocktail_name='a_name' and user_id='user0_id');
insert into downloadUserWithCocktail(num, cocktail_name, user_id)
	select null,'b_name','user0_id'
	from dual where not exists(
		select * from downloadUserWithCocktail where cocktail_name='b_name' and user_id='user0_id');
insert into downloadUserWithCocktail(num, cocktail_name, user_id)
	select null,'c_name','user0_id'
	from dual where not exists(
		select * from downloadUserWithCocktail where cocktail_name='c_name' and user_id='user0_id');

/*
댓글-칵테일-사용자 추가 쿼리문
*/
insert into commentCocktailWithUser(num, cocktail_name, user_id, comment, time)
	select null,'a_name','user0_id','a_user0_comment0','time';
insert into commentCocktailWithUser(num, cocktail_name, user_id, comment, time)
	select null,'a_name','user0_id','a_user0_comment1','time';

select * from user;
select * from downloadUserWithCocktail;

/*
삭제 쿼리문
*/
delete from user where user_id='user0_id';
delete from ingredient where ingredient_name='1_name';
delete from cocktail where cocktail_name='a_name';

/*
수정 쿼리문
*/
update user set user_nickname="userA_nickname" where user_id="user0_id" and user_password="user0_password";

DELETE from ingredient WHERE ingredient_id="1_id";
DELETE FROM COCKTAIL WHERE COCKTAIL_ID="a_id";

select * from cocktail where cocktail_writer="a_writer";

/*
조합_칵테일_재료조합 목록
*/
select cocktail.cocktail_name, settingCocktailWithIngredient.ingredient_name, settingCocktailWithIngredient.vol, settingCocktailWithIngredient.tool 
	from cocktail 
		inner join settingCocktailWithIngredient 
			on cocktail.cocktail_name = settingCocktailWithIngredient.cocktail_name and cocktail.cocktail_name = "a_name";

select cocktail.*, settingCocktailWithIngredient.*, 
commentCocktailWithUser.user_id, 
commentCocktailWithUser.comment, 
commentCocktailWithUser.time 
	from cocktail 
		inner join settingCocktailWithIngredient on 
			cocktail.cocktail_name=settingCocktailWithIngredient.cocktail_name 
			and cocktail.cocktail_name="a_name" 
		inner join commentCocktailWithUser on 
			cocktail.cocktail_name=commentCocktailWithUser.cocktail_name 
			and cocktail.cocktail_name="a_name";


/*
FUNCTION
*/

DELIMITER //
CREATE FUNCTION levenshtein( s1 VARCHAR(255), s2 VARCHAR(255) )
    RETURNS INT
    DETERMINISTIC
    BEGIN
        DECLARE s1_len, s2_len, i, j, c, c_temp, cost INT;
        DECLARE s1_char CHAR;
        -- max strlen=255
        DECLARE cv0, cv1 VARBINARY(256);

        SET s1_len = CHAR_LENGTH(s1), s2_len = CHAR_LENGTH(s2), cv1 = 0x00, j = 1, i = 1, c = 0;

        IF s1 = s2 THEN
            RETURN 0;
        ELSEIF s1_len = 0 THEN
            RETURN s2_len;
        ELSEIF s2_len = 0 THEN
            RETURN s1_len;
        ELSE
            WHILE j <= s2_len DO
                SET cv1 = CONCAT(cv1, UNHEX(HEX(j))), j = j + 1;
            END WHILE;
            WHILE i <= s1_len DO
                SET s1_char = SUBSTRING(s1, i, 1), c = i, cv0 = UNHEX(HEX(i)), j = 1;
                WHILE j <= s2_len DO
                    SET c = c + 1;
                    IF s1_char = SUBSTRING(s2, j, 1) THEN
                        SET cost = 0; ELSE SET cost = 1;
                    END IF;
                    SET c_temp = CONV(HEX(SUBSTRING(cv1, j, 1)), 16, 10) + cost;
                    IF c > c_temp THEN SET c = c_temp; END IF;
                    SET c_temp = CONV(HEX(SUBSTRING(cv1, j+1, 1)), 16, 10) + 1;
                    IF c > c_temp THEN
                        SET c = c_temp;
                    END IF;
                    SET cv0 = CONCAT(cv0, UNHEX(HEX(c))), j = j + 1;
                END WHILE;
                SET cv1 = cv0, i = i + 1;
            END WHILE;
        END IF;
        RETURN c;
    END//
DELIMITER ;

/*
TO FIND SIMILARITY
*/

select
	ingredient_name,
	levenshtein(ingredient_name, '1_nama') as distance
from ingredient
where	
	ingredient_name
order by
	distance
	asc;
